<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:tool="http://www.springframework.org/schema/tool" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/tx  
            http://www.springframework.org/schema/tx/spring-tx.xsd  
            http://www.springframework.org/schema/aop  
            http://www.springframework.org/schema/aop/spring-aop.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context.xsd  
           http://www.springframework.org/schema/jee  
           http://www.springframework.org/schema/jee/spring-jee.xsd  
           http://www.springframework.org/schema/util  
           http://www.springframework.org/schema/util/spring-util.xsd  
           http://www.springframework.org/schema/tool  
           http://www.springframework.org/schema/tool/spring-tool.xsd
           http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-lazy-init="true" default-autowire="byName">
	<!-- <mvc:annotation-driven /> -->

	<!-- 扫描注解 -->
	<context:annotation-config />
	<!-- 回滚配置   除了常规的spring的jar包，还需要导aopalliance.jar  -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<context:component-scan base-package="com.onlinetest.controller" />
	<context:component-scan base-package="com.onlinetest.service" />
	<context:component-scan base-package="com.onlinetest.dao" />
	<context:component-scan base-package="com.onlinetest.util" />
	

    <!-- @RequestMapping  该注解用于读取Request请求的body部分数据，使用系统默认配置的HttpMessageConverter进行解析，然后把相应的数据绑定到要返回的对象上  
	  需要去掉<mvc:annotation-driven />标签(该标签默认注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter) -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
			 <bean class="org.springframework.http.converter.StringHttpMessageConverter">
			   <property name="supportedMediaTypes">
			     <list><value>text/plain;charset=UTF-8</value></list>
			   </property>
			 </bean>
			</list>
		</property>
	</bean>
	<!-- 启用MVC注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>
	
	<!-- 配置数据库的信息 -->
	<!-- jdbc.properties文件位置的配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- c3p0  hibernate开发组推荐使用c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${c3p0.driverClass}"></property>
		<property name="jdbcUrl" value="${c3p0.url}"></property>
		<property name="user" value="${c3p0.user}"></property>
		<property name="password" value="${c3p0.password}"></property>
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"></property>
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>
		<property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
		<property name="acquireRetryDelay" value="1000"></property>
<!-- 		<property name="checkoutTimeout" value="1000"/> -->
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
<!--   		<property name="idleConnectionTestPeriod" value="60"/>  -->
  		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
		<property name="acquireRetryAttempts" value="60"></property>
		<property name="breakAfterAcquireFailure" value="false"></property>
		<property name="testConnectionOnCheckout" value="false"/>
	</bean>
<!-- dbcp  spring开发组推荐使用dbcp  -->
<!-- 	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp2.BasicDataSource"> -->
<!--         <property name="driverClassName" value="${c3p0.driverClass}"/> -->
<!--         <property name="url" value="${c3p0.url}"/> -->
<!--         <property name="username" value="${c3p0.user}"/> -->
<!--         <property name="password" value="${c3p0.password}"/> -->
<!--         池启动时创建的连接数量 -->
<!--         <property name="initialSize" value="${c3p0.initialPoolSize}"/> -->
<!--         同一时间可以从池分配的最多连接数量。设置为0时表示无限制。 -->
<!--         <property name="maxActive" value="${c3p0.maxPoolSize}"/> -->
<!--         <property name="minActive" value="${c3p0.minPoolSize}"></property> -->
<!--         池里不会被释放的最多空闲连接数量。设置为0时表示无限制。 -->
<!--         <property name="maxIdle" value="${jdbc.maxIdle}"/> -->
<!--         在不新建连接的条件下，池中保持空闲的最少连接数。 -->
<!--         <property name="minIdle" value="${jdbc.minIdle}"/> -->
<!--         设置自动回收超时连接   -->
<!--         <property name="removeAbandoned" value="true" /> -->
<!--         自动回收超时时间(以秒数为单位)   -->
<!--         <property name="removeAbandonedTimeout" value="200"/> -->
<!--         设置在自动回收超时连接的时候打印连接的超时错误   -->
<!--         <property name="logAbandoned" value="true"/> -->
<!--         等待超时以毫秒为单位，在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待。    -->
<!--         <property name="maxWait" value="100"/>   -->
<!--       </bean> -->

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />


	<!-- 采用@Transactional注解方式使用事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>classpath:message/message</value>
			</list>
		</property>
	</bean>
	<!-- viewResolver,页面显示控制 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
		<property name="prefix">
			<value>/WEB-INF/pages</value>  <!-- jstl.jar 负责页面的return跳转，指定跳转为/WEB-INF/pages目录下的jsp页面 -->
		</property>
		<property name="suffix">
			<value></value>
		</property>
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="104857600"/>
		<property name="maxInMemorySize" value="4096"/>
	</bean>
	
	
	<!-- 邮件配置信息 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>stmp.163.com</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
		<property name="username">
			<value>dingpeng.1107@163.com</value>
		</property>
		<property name="password">
			<value>dp211314.</value>
		</property>
	</bean>
</beans>